maxEntries: 100
interval: 'every 10 seconds'
retryDelay: 1000
verbose: false
ua: 'healthcheck'
slack:
  slackHook: ''
plugins:
  hapi-method-loader:
    _priority: -7
  hapi-method-scheduler:
    _priority: -6
    timezone: 'America/Los_Angeles'
    noParamsLength: true
    schedule: []
  vision:
    _priority: -5
  './lib/healthcheck':
    _priority: -4
  './lib/db':
    logPath: '{{ ENV.LOG_PATH }}'
    _priority: -4
  inert:
  hapi-route-loader:
  hapi-logr:
    reporters:
      sns:
        reporter: 'logr-sns'
        options:
          enabled: '{{(ENV.SNS_TOPIC) ? true : false}}'
          clientId: '{{ ENV.AWS_ACCESS_KEY_ID }}'
          secretId: '{{ ENV.AWS_SECRET_ACCESS_KEY }}'
          topic: '{{ ENV.SNS_TOPIC }}'
      consoleColor:
        options:
          colors:
            'service-down': 'bgRed'
            'service-restored': 'bgGreen'
            'service-slow': 'bgYellow'
      flat:
        options:
          tagColors:
            'service-down': 'bgRed'
            'service-restored': 'bgGreen'
            'service-slow': 'bgYellow'
      slack:
        reporter: 'logr-slack'
        options:
          enabled: '{{(slack.slackHook) ? true : false}}'
          throttle: '{{1000 * 60 * 10}}'
          throttleBasedOnTags: true
          username: 'HealthCheck'
          hideTags: true
          slackHook: '{{slack.slackHook}}'
          tagColors:
            'service-down': 'danger'
            'service-restored': 'good'
            'service-slow': 'warning'
          filter:
            - 'service-down'
            - 'service-restored'
            - 'notice'
